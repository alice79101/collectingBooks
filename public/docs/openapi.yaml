openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://collectingbooks.test'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user/register:
    post:
      summary: ''
      operationId: postApiUserRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'docs: available validation rules. Must not be greater than 20 characters.'
                  example: risqbqalvhnpwgfoyi
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: swaniawski.christian@example.net
                password:
                  type: string
                  description: 'Must contain only letters and numbers. Must be at least 6 characters. Must not be greater than 255 characters.'
                  example: 'D4Z9JUG9kw[o%b'
              required:
                - name
                - email
                - password
      security: []
  /api/user/login:
    post:
      summary: ''
      operationId: postApiUserLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: mosciski.jarrod@example.net
                password:
                  type: string
                  description: 'Must contain only letters and numbers. Must be at least 6 characters. Must not be greater than 12 characters.'
                  example: 'I2{K`9$P1F-HNm'
              required:
                - email
                - password
      security: []
  /api/user/logout:
    post:
      summary: ''
      operationId: postApiUserLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user/books:
    get:
      summary: ''
      operationId: getApiUserBooks
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiUserBooks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fqlrljlevjplnrrli
                author:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zreavkgoiggrjimjrucwkkql
              required:
                - name
                - author
      security: []
  '/api/user/books/{id}':
    get:
      summary: ''
      operationId: getApiUserBooksId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiUserBooksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the book.'
        example: 5
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
